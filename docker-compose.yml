services:
  database:
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - db_data:/data/db
      - ./01_initial_db.sql:/docker-entrypoint-initdb.d/01_initial_db.sql
      - ./02_initial_funcs.sql:/docker-entrypoint-initdb.d/02_initial_funcs.sql

  frontend:
    restart: unless-stopped
    build:
      context: frontend
      dockerfile: Dockerfile
    cap_add: [ NET_ADMIN ]
    ports: [ 80:80 ]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    env_file: .env

  backend:
    restart: unless-stopped
    build:
      context: backend
      dockerfile: Dockerfile
    env_file: .env
#    ports:
#      - ${BACKEND_PUBLIC_PORT}:${BACKEND_PORT}
    depends_on:
      database:
        condition: service_started
      frontend:
        condition: service_started

  ml:
    restart: unless-stopped
    env_file: .env
    build:
      context: ml
      dockerfile: Dockerfile
    depends_on:
      database:
        condition: service_started
      backend:
        condition: service_started
      

volumes:
  db_data:
  caddy_data:
  caddy_config:
  s3_data-1:
  s3_data-2: