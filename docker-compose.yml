services:
  database:
    image: postgres:17.0
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - db_data:/data/db
      - ./initial_db.sql:/docker-entrypoint-initdb.d/initial_db.sql

  frontend:
    restart: unless-stopped
    build:
      context: frontend
      dockerfile: Dockerfile
    cap_add: [ NET_ADMIN ]
    ports: [ 80:80 ]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    env_file: .env

  backend:
    restart: unless-stopped
    build:
      context: backend
      dockerfile: Dockerfile
    env_file: .env
#    ports:
#      - "8000:8000"
    depends_on:
      database:
        condition: service_started

#  ml:
#    restart: unless-stopped
#    env_file: .env
#    build:
#      context: ml
#      dockerfile: Dockerfile
#    depends_on:
#      database:
#        condition: service_started
#      frontend:
#        condition: service_started

volumes:
  db_data:
  caddy_data:
  caddy_config: